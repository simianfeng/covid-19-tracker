{"ast":null,"code":"var _jsxFileName = \"/Users/fengsimon/corona-tracker/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from \"./Chart.css\";\n\nconst Charts = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }) : null;\n  console.log(confirmed, recovered, deaths);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"{styles.container}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, country ? barChart : lineChart));\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/fengsimon/corona-tracker/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","console","log","barChart","value","legend","display","title","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }from 'react';\nimport {fetchDailyData} from '../../API';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from \"./Chart.css\";\n\nconst Charts=({data:{confirmed, recovered, deaths}, country})=>{\n    const [dailyData, setDailyData]= useState([]);\n    useEffect(()=>{\n        const fetchAPI=async()=>{\n            setDailyData (await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart=(\n        dailyData.length\n        ? (\n        <Line\n        data={{\n        labels:dailyData.map(({date})=>date),\n        datasets:[{\n            data:dailyData.map(({confirmed})=>confirmed),\n            label:'infected',\n            borderColor:'#3333ff',\n            fill:true,\n        },{\n            data:dailyData.map(({deaths})=>deaths),\n            label:'deaths',\n            borderColor:'red',\n            backgroundColor:'rgba(255,0,0,0.5)',\n            fill:true,\n            }]\n    }}/>):null\n    )\n    ;\n\n    console.log(confirmed, recovered, deaths);\n\n    const barChart = (\n        confirmed\n        ?(\n            <Bar\n            data={{\n                labels:['Infected', 'Recovered', 'Deaths'],\n                datasets:[{\n                    label: 'People',\n                    backgroundColor:['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)',], \n                    data: [ confirmed.value, recovered.value, deaths.value]\n                }]\n            }}\n\n            options={{\n                legend:{display:false},\n                title: {display:true, text:`Current state in ${country}`},\n            }}\n            />\n        ): null\n    )\n\n    return (\n        <div className='{styles.container}'>\n            <div className=\"chart\">\n            {country ? barChart : lineChart}\n            </div> \n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}