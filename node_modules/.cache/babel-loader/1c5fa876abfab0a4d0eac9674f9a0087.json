{"ast":null,"code":"var _jsxFileName = \"/Users/fengsimon/corona-tracker/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from \"./Chart.css\";\n\nconst Charts = (data, country) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: [rgba(0, 0, 255, 0.5), rgba(0, 255, 0, 0.5), rgba(255, 0, 0, 0.5)]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/fengsimon/corona-tracker/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","rgba","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,MAAM,GAAC,CAACC,IAAD,EAAOC,OAAP,KAAiB;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,QAAQ,GAAC,YAAS;AACpBD,MAAAA,YAAY,CAAE,MAAMR,cAAc,EAAtB,CAAZ;AACH,KAFD;;AAGAS,IAAAA,QAAQ;AACX,GALQ,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEA,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACNC,MAAAA,MAAM,EAACL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADD;AAENC,MAAAA,QAAQ,EAAC,CAAC;AACNV,QAAAA,IAAI,EAACE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADC;AAENC,QAAAA,KAAK,EAAC,UAFA;AAGNC,QAAAA,WAAW,EAAC,SAHN;AAINC,QAAAA,IAAI,EAAC;AAJC,OAAD,EAKP;AACEd,QAAAA,IAAI,EAACE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADP;AAEEH,QAAAA,KAAK,EAAC,QAFR;AAGEC,QAAAA,WAAW,EAAC,KAHd;AAIEG,QAAAA,eAAe,EAAC,mBAJlB;AAKEF,QAAAA,IAAI,EAAC;AALP,OALO;AAFH,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAiBE,IAlBN;AAsBA,QAAMG,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBAEI,oBAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACFJ,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADL;AAEFG,MAAAA,QAAQ,EAAC,CAAC;AACNE,QAAAA,KAAK,EAAE,QADD;AAENI,QAAAA,eAAe,EAAC,CAACE,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,GAAZ,CAAL,EAAuBA,IAAI,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,GAAZ,CAA3B,EAA6CA,IAAI,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,GAAZ,CAAjD;AAFV,OAAD;AAFP,KADN;AASA,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAC;AAAT,OADF;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAeE,QAAAA,IAAI,EAAE,oBAAmBrB,OAAQ;AAAhD;AAFF,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAgBG,IAjBP;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,SADL,CADJ;AAKH,CAxDD;;AA0DA,eAAeN,MAAf","sourcesContent":["import React, { useState, useEffect }from 'react';\nimport {fetchDailyData} from '../../API';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from \"./Chart.css\";\n\nconst Charts=(data, country)=>{\n    const [dailyData, setDailyData]= useState([]);\n    useEffect(()=>{\n        const fetchAPI=async()=>{\n            setDailyData (await fetchDailyData());\n        }\n        fetchAPI();\n    });\n\n    const lineChart=(\n        dailyData.length\n        ? (\n        <Line\n        data={{\n        labels:dailyData.map(({date})=>date),\n        datasets:[{\n            data:dailyData.map(({confirmed})=>confirmed),\n            label:'infected',\n            borderColor:'#3333ff',\n            fill:true,\n        },{\n            data:dailyData.map(({deaths})=>deaths),\n            label:'deaths',\n            borderColor:'red',\n            backgroundColor:'rgba(255,0,0,0.5)',\n            fill:true,\n            }]\n    }}/>):null\n    )\n    ;\n\n    const barChart = (\n        data.confirmed\n        ?(\n            <Bar\n            data={{\n                labels:['Infected', 'Recovered', 'Deaths'],\n                datasets:[{\n                    label: 'People',\n                    backgroundColor:[rgba(0, 0, 255, 0.5), rgba(0, 255, 0, 0.5), rgba(255, 0, 0, 0.5)]\n                }]\n            }}\n\n            options={{\n                legend:{display:false},\n                title: {display:true, text:`Current state in ${country}`},\n            }}\n            />\n        ): null\n    )\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}